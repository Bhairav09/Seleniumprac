{
  "stats": {
    "suites": 1,
    "tests": 2,
    "passes": 1,
    "pending": 0,
    "failures": 1,
    "start": "2024-06-20T11:09:35.927Z",
    "end": "2024-06-20T11:09:44.940Z",
    "duration": 9013,
    "testsRegistered": 2,
    "passPercent": 50,
    "pendingPercent": 0,
    "other": 1,
    "hasOther": true,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "bd4432e9-8f15-4d3e-a071-00802558fead",
      "title": "",
      "fullFile": "C:\\Users\\HP-79\\seleniumprac\\test\\test.js",
      "file": "\\test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "229678cd-6e21-4404-871d-d161ded5776c",
          "title": "User Signup and Login Flow",
          "fullFile": "C:\\Users\\HP-79\\seleniumprac\\test\\test.js",
          "file": "\\test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"User Signup and Login Flow\"",
              "fullTitle": "User Signup and Login Flow \"before all\" hook in \"User Signup and Login Flow\"",
              "timedOut": false,
              "duration": 796,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await new Builder().forBrowser(\"chrome\").build();\nawait driver.manage().window().maximize();",
              "err": {},
              "uuid": "19d23e62-2760-4250-b466-5a0060ceeabc",
              "parentUUID": "229678cd-6e21-4404-871d-d161ded5776c",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"User Signup and Login Flow\"",
              "fullTitle": "User Signup and Login Flow \"after all\" hook in \"User Signup and Login Flow\"",
              "timedOut": false,
              "duration": 64,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.quit();",
              "err": {},
              "uuid": "fdd4ab21-fa49-4af1-8ddc-3087b8833dc8",
              "parentUUID": "229678cd-6e21-4404-871d-d161ded5776c",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after all\" hook for \"should login to the application\"",
              "fullTitle": "User Signup and Login Flow \"after all\" hook for \"should login to the application\"",
              "timedOut": false,
              "duration": 17,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "exec('your-command', (err, stdout, stderr) => {\n  if (err) {\n    console.error(`Error executing command: ${stderr}`);\n    done(err);\n  } else {\n    console.log(`Command output: ${stdout}`);\n    done();\n  }\n});",
              "err": {
                "message": "Error: Command failed: your-command\n'your-command' is not recognized as an internal or external command,\r\noperable program or batch file.\r\n",
                "estack": "Error: Command failed: your-command\n'your-command' is not recognized as an internal or external command,\r\noperable program or batch file.\r\n\n    at genericNodeError (node:internal/errors:984:15)\n    at wrappedFn (node:internal/errors:538:14)\n    at ChildProcess.exithandler (node:child_process:422:12)\n    at ChildProcess.emit (node:events:519:28)\n    at maybeClose (node:internal/child_process:1105:16)\n    at ChildProcess._handle.onexit (node:internal/child_process:305:5)",
                "diff": null
              },
              "uuid": "5ae13c8e-fe70-479c-a5d3-86edc51598e6",
              "parentUUID": "229678cd-6e21-4404-871d-d161ded5776c",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should complete user signup and login flow",
              "fullTitle": "User Signup and Login Flow should complete user signup and login flow",
              "timedOut": false,
              "duration": 7411,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.get('https://letcode.in/test'); // Adjust based on site structure\n// Click on Edit link (replace with actual selector)\nconst editLink = await driver.wait(until.elementLocated(By.xpath(\"//a[text()='Edit']\")), 10000);\nawait editLink.click();\n// Clear join field and enter new value\nconst joinField = await driver.findElement(By.xpath(\"//input[@id='join']\"));\nawait joinField.clear();\nawait joinField.sendKeys('Done');\n// Enter text in getMe field\nconst getMeField = await driver.findElement(By.id('getMe'));\nawait getMeField.sendKeys('HIIII');",
              "err": {},
              "uuid": "8a46c242-f03e-4cd5-b641-f677cea39d0a",
              "parentUUID": "229678cd-6e21-4404-871d-d161ded5776c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should login to the application",
              "fullTitle": "User Signup and Login Flow should login to the application",
              "timedOut": false,
              "duration": 717,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Navigate to the login page\nawait driver.get(\"https://test-login-app.vercel.app/\");\n\n// Enter email\nconst emailField = await driver.findElement(By.id(\"email\"));\nawait emailField.sendKeys(\"test3@gmail.com\");\n\n// Enter password\nconst passwordField = await driver.findElement(By.id(\"password\"));\nawait passwordField.sendKeys(\"Password@12345\");\n\n// Click login button\nconst loginButton = await driver.findElement(By.name(\"login\"));\nawait loginButton.click();\n\n// Verify the login was successful by checking the page title\nconst pageTitle = await driver.getTitle();\nassert.strictEqual(pageTitle, \"Welcome Page Title\"); // Replace with the actual expected title\nconsole.log(\"Login successful, page title:\", pageTitle);",
              "err": {
                "message": "AssertionError: Expected values to be strictly equal:\n+ actual - expected\n\n+ 'TestLogin'\n- 'Welcome Page Title'",
                "estack": "AssertionError [ERR_ASSERTION]: Expected values to be strictly equal:\n+ actual - expected\n\n+ 'TestLogin'\n- 'Welcome Page Title'\n    at Context.<anonymous> (test.js:67:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": "- TestLogin\n+ Welcome Page Title\n"
              },
              "uuid": "e9520b7d-980f-4d82-b682-555ff37d7c48",
              "parentUUID": "229678cd-6e21-4404-871d-d161ded5776c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8a46c242-f03e-4cd5-b641-f677cea39d0a"
          ],
          "failures": [
            "e9520b7d-980f-4d82-b682-555ff37d7c48"
          ],
          "pending": [],
          "skipped": [],
          "duration": 8128,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.4.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}